import { checkUserInFirebaseAuth, listUsersInDatabase, testFirebaseConnection } from './createUsers';

/**
 * Script de diagn√≥stico completo para problemas de acceso
 */
export const runDiagnostic = async () => {
  console.log('üîç ===== DIAGN√ìSTICO DE FIREBASE =====');
  console.log('');
  
  // 1. Probar conexi√≥n con Firebase
  console.log('1Ô∏è‚É£ Probando conexi√≥n con Firebase...');
  const connectionOk = await testFirebaseConnection();
  console.log('');
  
  if (!connectionOk) {
    console.log('‚ùå Error de conexi√≥n. Verifica:');
    console.log('   - Configuraci√≥n de Firebase en firebaseConfig.ts');
    console.log('   - Conexi√≥n a internet');
    console.log('   - Reglas de seguridad de Firebase');
    return;
  }
  
  // 2. Listar usuarios en la base de datos
  console.log('2Ô∏è‚É£ Verificando usuarios en la base de datos...');
  const users = await listUsersInDatabase();
  console.log('');
  
  // 3. Instrucciones de verificaci√≥n
  console.log('3Ô∏è‚É£ Verificaciones manuales necesarias:');
  console.log('');
  console.log('üìã En Firebase Console:');
  console.log('   1. Ve a Authentication ‚Üí Users');
  console.log('   2. Verifica que el usuario est√© creado');
  console.log('   3. Verifica que el email est√© correcto');
  console.log('   4. Verifica que el usuario est√© habilitado');
  console.log('');
  console.log('üìã En Realtime Database:');
  console.log('   1. Ve a Realtime Database ‚Üí users');
  console.log('   2. Verifica que exista el nodo del usuario');
  console.log('   3. Verifica que tenga el rol correcto');
  console.log('');
  
  // 4. Posibles problemas y soluciones
  console.log('4Ô∏è‚É£ Posibles problemas y soluciones:');
  console.log('');
  console.log('üî¥ Problema: Usuario no existe en Firebase Auth');
  console.log('   Soluci√≥n: Crear usuario en Firebase Console ‚Üí Authentication ‚Üí Users');
  console.log('');
  console.log('üî¥ Problema: Contrase√±a incorrecta');
  console.log('   Soluci√≥n: Resetear contrase√±a en Firebase Console');
  console.log('');
  console.log('üî¥ Problema: Usuario no existe en base de datos');
  console.log('   Soluci√≥n: El usuario se crea autom√°ticamente en el primer login');
  console.log('');
  console.log('üî¥ Problema: Reglas de seguridad bloquean acceso');
  console.log('   Soluci√≥n: Verificar reglas en Realtime Database ‚Üí Rules');
  console.log('');
  console.log('üî¥ Problema: Email no verificado');
  console.log('   Soluci√≥n: Verificar email o deshabilitar verificaci√≥n en Firebase Console');
  console.log('');
  
  // 5. Comandos de prueba
  console.log('5Ô∏è‚É£ Comandos para probar:');
  console.log('');
  console.log('// Probar conexi√≥n');
  console.log('await testFirebaseConnection();');
  console.log('');
  console.log('// Listar usuarios');
  console.log('await listUsersInDatabase();');
  console.log('');
  console.log('// Verificar usuario espec√≠fico');
  console.log('await checkUserInFirebaseAuth("tu-email@ejemplo.com");');
  console.log('');
  
  console.log('‚úÖ ===== DIAGN√ìSTICO COMPLETADO =====');
};

/**
 * Funci√≥n espec√≠fica para diagnosticar un usuario
 */
export const diagnoseUser = async (email: string) => {
  console.log(`üîç ===== DIAGN√ìSTICO PARA ${email} =====`);
  console.log('');
  
  // 1. Verificar conexi√≥n
  const connectionOk = await testFirebaseConnection();
  if (!connectionOk) {
    console.log('‚ùå Error de conexi√≥n con Firebase');
    return;
  }
  
  // 2. Verificar usuario en Firebase Auth
  console.log('üîê Verificando en Firebase Authentication...');
  await checkUserInFirebaseAuth(email);
  console.log('');
  
  // 3. Verificar usuario en base de datos
  console.log('üìä Verificando en base de datos...');
  const users = await listUsersInDatabase();
  const userInDB = users.find(u => u.email === email);
  
  if (userInDB) {
    console.log('‚úÖ Usuario encontrado en base de datos:');
    console.log(`   UID: ${userInDB.uid}`);
    console.log(`   Rol: ${userInDB.role}`);
    console.log(`   ContactId: ${userInDB.contactId}`);
  } else {
    console.log('‚ùå Usuario no encontrado en base de datos');
    console.log('   Se crear√° autom√°ticamente en el primer login');
  }
  console.log('');
  
  // 4. Instrucciones espec√≠ficas
  console.log('üìã Pasos para solucionar:');
  console.log('');
  console.log('1. Verifica en Firebase Console ‚Üí Authentication ‚Üí Users');
  console.log(`   - Busca el usuario: ${email}`);
  console.log('   - Verifica que est√© habilitado');
  console.log('   - Verifica que el email est√© correcto');
  console.log('');
  console.log('2. Si el usuario no existe:');
  console.log('   - Crea el usuario en Firebase Console');
  console.log('   - O usa el bot√≥n "Add User"');
  console.log('');
  console.log('3. Si el usuario existe pero no puede acceder:');
  console.log('   - Verifica la contrase√±a');
  console.log('   - Considera resetear la contrase√±a');
  console.log('');
  console.log('4. Despu√©s del primer login exitoso:');
  console.log('   - Ve a Realtime Database ‚Üí users');
  console.log('   - Asigna el rol correcto (ADMIN o PRODUCTOR)');
  console.log('   - Para PRODUCTOR, asigna el contactId');
  console.log('');
  
  console.log('‚úÖ ===== DIAGN√ìSTICO COMPLETADO =====');
};
